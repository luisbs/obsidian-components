import { resolve } from 'path'
import { defineConfig } from 'vite'
import { viteStaticCopy } from 'vite-plugin-static-copy'
import builtins from 'builtin-modules'

// https://vitejs.dev/config/
export default defineConfig((ctx) => {
  const PRD = ctx.mode === 'production'

  const DEMO_PATH = 'demo/.obsidian/plugins/obsidian-components'
  return {
    resolve: {
      alias: {
        'obsidian-fnc': resolve(__dirname, 'node_modules/obsidian-fnc/src'),
        '@ui': resolve(__dirname, 'src/components'),
        '@': resolve(__dirname, 'src'),
      },
    },

    esbuild: {
      keepNames: true,
      minifyIdentifiers: false,
      // remove logs on production
      drop: PRD ? ['debugger'] : [],
      pure: PRD ? ['console.trace', 'console.debug', 'console.log'] : [],
      banner: [
        '/*',
        'THIS IS A GENERATED/BUNDLED FILE BY ESBUILD',
        'if you want to view the source, please visit the github repository of this plugin',
        '*/\n',
      ].join('\n'),
    },
    build: {
      target: 'es2021',

      outDir: PRD ? resolve('dist') : resolve(DEMO_PATH),
      sourcemap: PRD ? false : 'inline',
      emptyOutDir: PRD,
      lib: {
        entry: resolve(__dirname, 'src/main.ts'),
        formats: ['cjs'],
        fileName: () => 'main.js',
      },
      rollupOptions: {
        logLevel: 'info',
        treeshake: true,
        output: { exports: 'named' },
        external: [
          'obsidian',
          'electron',
          '@codemirror/autocomplete',
          '@codemirror/closebrackets',
          '@codemirror/collab',
          '@codemirror/commands',
          '@codemirror/comment',
          '@codemirror/fold',
          '@codemirror/gutter',
          '@codemirror/highlight',
          '@codemirror/history',
          '@codemirror/language',
          '@codemirror/lint',
          '@codemirror/matchbrackets',
          '@codemirror/panel',
          '@codemirror/rangeset',
          '@codemirror/rectangular-selection',
          '@codemirror/search',
          '@codemirror/state',
          '@codemirror/stream-parser',
          '@codemirror/text',
          '@codemirror/tooltip',
          '@codemirror/view',
          ...builtins,
        ],
      },
    },

    plugins: [
      viteStaticCopy({
        targets: [
          { src: 'manifest.json', dest: './' },
          { src: 'src/styles.css', dest: './' },
        ],
      }),
    ],
  }
})
